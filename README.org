* FizzBuzz
We have identified the following smells here.
1. Switch Case: Using Polymorphism
2. Null Smell: By eliminating it as it was unnecessary.
3. Inappropriate Naming: Fixed the name of the method ~say()~
4. Duplicate Code Smell: Eliminated switch case duplicate code using polymorphism.

   To handle them, we made the following adjustments.
[[file:FizzBuzz.drawio.png]]
* HTMLEncoder
Here, we have split the original class into two class to follow the Single Responsibility principle. We have used interfaces for more robust structure. The client uses the interface blueprint to access the services.

Aside from that, we have handled the following smells:
1. Blacksheep
2. Primitive Obsession
3. Switch Case
4. Replace temp with query
[[file:HTMLEncoder.drawio.png]]
* TriviaGame
The following is the class hierarchy for TriviaGame. We have followed the following steps.
1. Extract methods
2. Extract Class
3. Extract Interface
4. Narrow Interface/Refused Bequest Smell
5. Try different inheritance style

[[file:TriviaGame.drawio.png]]
